name: Swift Package Release

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Directory where Swift package is located"
        required: false
        type: string
        default: "."
      release-title-prefix: # used as optional paramter where users can customize their release title. Eg: Swift-v0.1.2
        description: "Optional release title prefix"
        required: false
        type: string
        default: ""

jobs:
  release-check:
    name: Check if version is published
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}
    outputs:
      current-version: ${{ steps.check.outputs.current-version }}
      published: ${{ steps.check.outputs.published }}
      previous-version: ${{ steps.check.outputs.previous-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch tags as well

      - name: Read version from Package.version
        id: read-version
        run: |
          version=$(jq -r '.version' Package.version)
          echo "current-version=$version" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check
        run: |
          current="${{ steps.read-version.outputs.current-version }}"
          previous=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")

          if git rev-parse "$current" >/dev/null 2>&1; then
            published=true
          else
            published=false
          fi

          echo "published=$published" >> $GITHUB_OUTPUT
          echo "previous-version=$previous" >> $GITHUB_OUTPUT
          echo "current-version=$current" >> $GITHUB_OUTPUT

  release_to_github:
    needs: release-check
    if: ${{ needs.release-check.outputs.published == 'false' }}
    runs-on: macos-latest
    permissions:
      contents: write # for publishing release to GitHub
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: actions/checkout@v4

      - name: Build Swift package
        run: swift build -v

      - name: Run tests
        run: swift test -v

      - name: Extract changelog for version
        run: |
          if [ -f "CHANGELOG.md" ]; then
            awk "/# ${{ needs.release-check.outputs.current-version }}/,/^#/" CHANGELOG.md | sed '$d' > changelog_for_version.md || \
            echo "Release ${{ needs.release-check.outputs.current-version }}" > changelog_for_version.md
          else
            echo "Release ${{ needs.release-check.outputs.current-version }}" > changelog_for_version.md
          fi
          cat changelog_for_version.md

      - name: Create git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ needs.release-check.outputs.current-version }}
          git push origin ${{ needs.release-check.outputs.current-version }}

      - name: Update Release Notes
        id: update_release_notes
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ needs.release-check.outputs.current-version }}
          name: ${{ inputs.release-title-prefix }}v${{ needs.release-check.outputs.current-version }}
          bodyFile: ${{ inputs.working-directory }}/changelog_for_version.md
          allowUpdates: true
          draft: false
          prerelease: false
